# This is a basic workflow to help you get started with Actions

name: C++ CI Build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Building with cmake
    - name: Bulding
      run: |
            mkdir build
            cd build
            cmake -DCODE_COVERAGE=ON -DCMAKE_BUILD_TYPE=Debug ..
            cmake --build . --config Debug -- -j $(nproc)
            ctest -j $(nproc) --output-on-failure

  test_coverage:
    runs-on: ubuntu-latest

    needs: build

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        persist-credentials: false
    - name: Setup test coverage
      run: |
            sudo apt install lcov
            mkdir build
            cd build
            cmake -DCODE_COVERAGE=ON -DCMAKE_BUILD_TYPE=Debug ..
            cmake --build . --config Debug -- -j $(nproc)
            ctest -j $(nproc) --output-on-failure
            lcov --directory . --capture --output-file coverage.info
            lcov --list coverage.info
    - name: Upload
      run: |
            bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
    - name: Upload coverage to Codecov  
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

